# Generated by Django 5.0.2 on 2025-06-15 08:29

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models
#import django.contrib.postgres.fields.search
#import django.contrib.postgres.indexes
from django.contrib.postgres.search import SearchVector

def populate_search_vector(apps, schema_editor):
    Event = apps.get_model('event_management', 'Event')
    from django.db import connection
    
    # Skip if we're not in a PostgreSQL database
    if connection.vendor != 'postgresql':
        return
        
    Event.objects.update(
        search_vector=SearchVector('title', weight='A') + 
                     SearchVector('description', weight='B') +
                     SearchVector('venue', weight='C') + 
                     SearchVector('address', weight='D')   
    )

def reverse_search_vector(apps, schema_editor):
    Event = apps.get_model('event_management', 'Event')
    Event.objects.update(search_vector=None)

class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
        ('event_management', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='authentication.organizer'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='event_manag_search__7bb5cc_gin'),
        ),
        migrations.RunPython(populate_search_vector, reverse_search_vector),

    ]
